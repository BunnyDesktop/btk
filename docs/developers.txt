Things to care about when using/programing for BTK+
===================================================

This file is meant to collect some frequently triggered failures when
programming for/with Btk, having the spirit of a developers FAQ.
It is also the correct place to list up things that programmers should
care about in general.

In the hope that this text might be useful to someone,

        - Tim Janik <timj@gimp.org>
          1998/02/11


Automatic destruction of widgets on removal from parent
-------------------------------------------------------

This is a reference counting issue, you would want to refer
to refcounting.txt on it.


What are all the widget flags about?
------------------------------------

Refer to the file widget_system.txt which covers widget flags and the
resulting invariants in a detailed way.


BdkWindow pointers may be NULL in BdkEvents
-------------------------------------------

The notification nature of the signal mechanism might cause events to
be emitted that have their BdkWindow pointer set to NULL.
This is due to the fact that certain events need to be emitted after the
real BdkWindow of a widget is not any longer pertinent.
It's up to the signal handling function (application) to check for the
window field of the event structure to be != NULL, if it is going to
perform any operations through Bdk calls on it.
Events that a likely to trigger a missing check for the window pointer
currently are (and correspond to the trailing signals):

BDK_SELECTION_CLEAR     BtkWidget::selection_clear_event
BDK_FOCUS_CHANGE        BtkWidget::focus_in_event
                        BtkWidget::focus_out_event

Events that are assured to have a valid BdkEvent.any.window field are

BDK_EXPOSE		BtkWidget::expose_event


Writing Bdk functions
---------------------

When writing Bdk functions that operate on BdkWindow structures in any
meaningful sense, that is casting to a BdkWindowPrivate structure for
access to fields other then BdkWindow.user_data, the programmer is
recommended to check for the BdkWindowPrivate.destroyed field to be ==
FALSE, especially if the BdkWindowPrivate.xwindow field is used.
Silent abortion of the Bdk function is the correct behaviour if this
condition isn't met.
