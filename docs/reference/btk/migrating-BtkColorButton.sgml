<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
]>
<chapter id="btk-migrating-BtkColorButton">

  <title>Migrating from BunnyColorPicker to BtkColorButton</title>

  <para>
    Since version 2.6, BTK+ provides the #BtkColorButton
    widget as a replacement for the <structname>BunnyColorPicker</structname> 
    widget in the libbunnyui library.
  </para>

  <para>
   Porting an application from <structname>BunnyColorPicker</structname> to 
   <structname>BtkColorButton</structname> is very simple. 
   <structname>BtkColorButton</structname> doesn't support dithering 
   (since it is rarely needed on modern hardware), and it doesn't have 
   setters and getters to set the color from floating point or integer 
    components. So instead of
   <informalexample><programlisting>
   buint red, green, blue, alpha;
   /* ... */
   bunny_color_picker_set_i8 (color_picker, red, green, blue, alpha);
   </programlisting></informalexample>   
   you have to write
   <informalexample><programlisting>
   BdkColor color;

   color.red = red &lt;&lt; 8;
   color.green = green &lt;&lt; 8;
   color.blue = blue &lt;&lt; 8;
   btk_color_button_set_color (color_picker, &amp;color);
   btk_color_button_set_alpha (color_picker, alpha &lt;&lt; 8);
   </programlisting></informalexample>   
  and similarly for the setters taking other number formats. For 
  <function>bunny_color_picker_set_i16()</function> no conversion is needed, 
  for <function>bunny_color_picker_set_d()</function>, you need to convert 
  the color components like this:
   <informalexample><programlisting>  
   color.red = (buint16) (red * 65535.0 + 0.5);
   color.green = (buint16) (green * 65535.0 + 0.5);
   color.blue = (buint16) (blue * 65535.0 + 0.5);
   </programlisting></informalexample>   
  </para>
</chapter>

<!--
Local variables:
mode: sgml
sgml-parent-document: ("btk-docs.sgml" "book" "part" "chapter")
End:
-->
