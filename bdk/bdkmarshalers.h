/* This file is generated by bunnylib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
#ifndef ___BDK_MARSHAL_MARSHAL_H__
#define ___BDK_MARSHAL_MARSHAL_H__

#include <bunnylib-object.h>

G_BEGIN_DECLS

/* VOID:OBJECT (./bdkmarshalers.list:1) */
#define _bdk_marshal_VOID__OBJECT	g_cclosure_marshal_VOID__OBJECT

/* VOID:BOOLEAN (./bdkmarshalers.list:2) */
#define _bdk_marshal_VOID__BOOLEAN	g_cclosure_marshal_VOID__BOOLEAN

/* VOID:POINTER,POINTER,POINTER (./bdkmarshalers.list:3) */
extern
void _bdk_marshal_VOID__POINTER_POINTER_POINTER (GClosure     *closure,
                                                 GValue       *return_value,
                                                 guint         n_param_values,
                                                 const GValue *param_values,
                                                 gpointer      invocation_hint,
                                                 gpointer      marshal_data);

/* OBJECT:VOID (./bdkmarshalers.list:4) */
extern
void _bdk_marshal_OBJECT__VOID (GClosure     *closure,
                                GValue       *return_value,
                                guint         n_param_values,
                                const GValue *param_values,
                                gpointer      invocation_hint,
                                gpointer      marshal_data);

/* OBJECT:DOUBLE,DOUBLE (./bdkmarshalers.list:5) */
extern
void _bdk_marshal_OBJECT__DOUBLE_DOUBLE (GClosure     *closure,
                                         GValue       *return_value,
                                         guint         n_param_values,
                                         const GValue *param_values,
                                         gpointer      invocation_hint,
                                         gpointer      marshal_data);

/* VOID:DOUBLE,DOUBLE,POINTER,POINTER (./bdkmarshalers.list:6) */
extern
void _bdk_marshal_VOID__DOUBLE_DOUBLE_POINTER_POINTER (GClosure     *closure,
                                                       GValue       *return_value,
                                                       guint         n_param_values,
                                                       const GValue *param_values,
                                                       gpointer      invocation_hint,
                                                       gpointer      marshal_data);


G_END_DECLS

#endif /* ___BDK_MARSHAL_MARSHAL_H__ */
